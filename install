#!/bin/sh

tput setaf 7 ; tput setab 4 ; tput bold ; printf '%32s%s%-13s\n' "Atualizando" ; tput sgr0
echo ""

IP1=`host luan-ssh.tk | awk '{print $NF}'`
IP2=`host ssh-luan.tk | awk '{print $NF}'`
IP3=`host luan-aruba.tk | awk '{print $NF}'`

apt-get update
apt-get upgrade -y

clear

tput setaf 7 ; tput setab 4 ; tput bold ; printf '%32s%s%-13s\n' "Removendo restos de instalação antiga" ; tput sgr0
echo ""

sleep 1.5s

rm -rf /root/.git
rm -rf /root/VPS
rm -rf /root/install
rm -rf /home/ubuntu/.git
rm -rf /home/ubuntu/VPS
rm -rf /home/ubuntu/install

clear

tput setaf 7 ; tput setab 4 ; tput bold ; printf '%32s%s%-13s\n' "Instalando GIT" ; tput sgr0
echo ""

sleep 1.5s

apt-get install git -y
git clone https://github.com/jluanb/VPS.git
clear
cd VPS
rm -rf README.md
rm -rf install
for arqs in `ls`
do
rm /bin/$arqs 2>/dev/null
mv $arqs /bin
chmod +x /bin/$arqs
done

clear

tput setaf 7 ; tput setab 4 ; tput bold ; printf '%32s%s%-13s\n' "Instalando Squid3" ; tput sgr0

sleep 2s

apt-get install squid3 -y

echo "# Ganhos de performançe na hierarchy_stoplist
hierarchy_stoplist cgi-bin ?
# Tempo limite de conexões aceitas e negadas
negative_ttl 3 minutes
positive_dns_ttl 5 minutes
# Terminar imediatamente conexões finalizadas de clientes
half_closed_clients off
# Desabilitar memory_pools (Ganho de performançe em RAM)
memory_pools off
# Fix
strip_query_terms off
detect_broken_pconn on
pipeline_prefetch on
acl url1 dstdomain -i 127.0.0.1
acl url2 dstdomain -i localhost
acl url3 dstdomain -i $IP1
acl url3 dstdomain -i luan-ssh.tk
acl url3 dstdomain -i $IP2
acl url3 dstdomain -i ssh-luan.tk
acl url3 dstdomain -i $IP3
acl url3 dstdomain -i luan-aruba.tk
acl block dstdomain '/etc/squid3/block.txt'
acl payload dstdomain -i '/etc/squid3/payload.txt'

http_access allow url1
http_access allow url2
http_access allow url3
http_access allow payload
http_access deny block

http_access deny all
 
http_port 8080
http_port 80
http_port 3128
visible_hostname luan-ssh
forwarded_for off
via off" > /etc/squid3/squid.conf

echo ".claro.com.br
.claro.com
.claroideas.com
.claroideias.com.br
.claromusica.com
.clarosomdechamada.com.br
.clarovideo.com
.netclaro.com.br
.oi.com.br
.speedtest.net
.tim.com.br
.timanamaria.com.br
.vivo.com.br
.bradescocelular.com.br
v.whatsapp.com
loja.oi.com.br
.rdio.com/rewrite.pandora.com
.vivoblog.com.br
.sascdn.com
.nethoes.com.br
.vivomms.com.br
.cloudfront.net" > /etc/squid3/payload.txt 

echo ".riotgames.com
.proxyradar.com
.proxyfire.com
.proxyfire.net
.freeproxies.gq
.waw.pl/testproxy.php
.top/proxyheader.php
.sohu.com
.qq.com
.cybersyndrome.net
.qidian.com
.zongheng.com" > /etc/squid3/block.txt

echo "Port 2510
Port 443
Protocol 2
Compression yes
KeyRegenerationInterval 3600
ServerKeyBits 1024
SyslogFacility AUTH
LogLevel INFO
LoginGraceTime 60
PermitRootLogin yes
StrictModes yes
RSAAuthentication yes
PubkeyAuthentication yes
IgnoreRhosts yes
RhostsRSAAuthentication no
HostbasedAuthentication no
PermitEmptyPasswords no
ChallengeResponseAuthentication no
PasswordAuthentication yes
X11Forwarding yes
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#Banner /etc/banner.txt
#UseLogin no
AcceptEnv LANG LC_*
Subsystem sftp /usr/lib/openssh/sftp-server
UsePAM yes" > /etc/ssh/sshd_config

service squid3 restart

chk=$(cat /etc/ssh/sshd_config |grep Banner )
if echo "$chk" |grep -v "#Banner" |grep Banner > /dev/null 2> /dev/null
then
local=$(echo "$chk" |grep -v "#Banner" |grep Banner |awk '{print $2}')
echo "O que vc deseja por no banner ?"
read -p ": " banner
echo "$banner" > $local
else
echo "Banner /etc/banner.txt" >> /etc/ssh/sshd_config
service ssh restart > /dev/null 2> /dev/null
service sshd restart > /dev/null 2> /dev/null
banner
fi

clear

tput setaf 7 ; tput setab 4 ; tput bold ; printf '%32s%s%-13s\n' "Otimizando Sysctl" ; tput sgr0
echo ""

sleep 2s

echo "fs.file-max = 51200
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864
net.core.netdev_max_backlog = 250000
net.core.somaxconn = 4096
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 1200
net.ipv4.ip_local_port_range = 10000 65000
net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_max_tw_buckets = 5000
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_mem = 25600 51200 102400
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864
net.ipv4.tcp_rmem = 4096 87380 67108864
net.ipv4.tcp_wmem = 4096 65536 67108864
net.core.netdev_max_backlog = 250000
net.ipv4.tcp_mtu_probing=1
net.ipv4.tcp_congestion_control=westwood" >> /etc/sysctl.conf
sysctl -p
echo "westwood" > /proc/sys/net/ipv4/tcp_congestion_control

clear

tput setaf 7 ; tput setab 4 ; tput bold ; printf '%32s%s%-13s\n' "Instalando Vnstat, Pktstat, Ntop, Nethogs e dependencias" ; tput sgr0
echo ""

sleep 1.5s

	apt-get install vnstat -y
	apt-get install pktstat -y
	apt-get install ntop graphviz -y
	apt-get install make g++ -y
	apt-get install libncurses5-dev -y
	apt-get install libpcap-dev -y

	# Baixe o código fonte, compile e instale:
	wget http://github.com/raboof/nethogs/archive/v0.8.5.tar.gz
	tar xf v0.8.5.tar.gz
	cd ./nethogs-0.8.5/
	make && make install
	rm -rf /root/VPS
	rm -fr /home/ubuntu/VPS
	exit
fi
